Prog 2 Prefinals - Gravilockers ArrayList Version
by Cris Lawrence Adrian Militante

The University of San Carlos has begun rolling out its newest locker technology: GraviLockers.

These lockers are capable of fitting any amount of items, for as long as the total weight of all items does not exceed the weight limit of 5 KG. However, during shipping, the lockers' disk drives were damaged, and the firmware that made them work was lost. Luckily, the documentation for the structures remained intact.

As students of DCISM, USC needs your help. Write the codes for the functions to make the lockers work again.

Sample Output 1

[0] - Cris Militante
[1] - Gabriel Pineda
Select a locker: 1
[0] Item: Prog 1 Book     | Weight: 0.35
[1] Item: Shoes           | Weight: 0.87
[2] Item: Laptop          | Weight: 2.35
[3] Item: Keyboard        | Weight: 1.17
[4] Item: Notebook        | Weight: 0.15
[5] Item: Backpack        | Weight: 1.80
[-1] Exit
Input the item you would like to insert: 1
Item Shoes has been inserted.
[0] - Cris Militante
[1] - Gabriel Pineda
Select a locker: 1
[0] Item: Prog 1 Book     | Weight: 0.35
[1] Item: Shoes           | Weight: 0.87
[2] Item: Laptop          | Weight: 2.35
[3] Item: Keyboard        | Weight: 1.17
[4] Item: Notebook        | Weight: 0.15
[5] Item: Backpack        | Weight: 1.80
[-1] Exit
Input the item you would like to insert: 2
Item Laptop has been inserted.
[0] - Cris Militante
[1] - Gabriel Pineda
Select a locker: 1
[0] Item: Prog 1 Book     | Weight: 0.35
[1] Item: Shoes           | Weight: 0.87
[2] Item: Laptop          | Weight: 2.35
[3] Item: Keyboard        | Weight: 1.17
[4] Item: Notebook        | Weight: 0.15
[5] Item: Backpack        | Weight: 1.80
[-1] Exit
Input the item you would like to insert: 3
Item Keyboard has been inserted.
[0] - Cris Militante
[1] - Gabriel Pineda
Select a locker: 1
[0] Item: Prog 1 Book     | Weight: 0.35
[1] Item: Shoes           | Weight: 0.87
[2] Item: Laptop          | Weight: 2.35
[3] Item: Keyboard        | Weight: 1.17
[4] Item: Notebook        | Weight: 0.15
[5] Item: Backpack        | Weight: 1.80
[-1] Exit
Input the item you would like to insert: -1

Locker: [14101941] Cris Militante
Total Weight: 0.00kg

Locker: [14101943] Gabriel Pineda
[0] Item: Shoes           | Weight: 0.87
[1] Item: Keyboard        | Weight: 1.17
[2] Item: Laptop          | Weight: 2.35
Total Weight: 4.39kg
Sample Output 2

[0] - Cris Militante
[1] - Gabriel Pineda
Select a locker: 0
[0] Item: Prog 1 Book     | Weight: 0.35
[1] Item: Shoes           | Weight: 0.87
[2] Item: Laptop          | Weight: 2.35
[3] Item: Keyboard        | Weight: 1.17
[4] Item: Notebook        | Weight: 0.15
[5] Item: Backpack        | Weight: 1.80
[-1] Exit
Input the item you would like to insert: 5
Item Backpack has been inserted.
[0] - Cris Militante
[1] - Gabriel Pineda
Select a locker: 0
[0] Item: Prog 1 Book     | Weight: 0.35
[1] Item: Shoes           | Weight: 0.87
[2] Item: Laptop          | Weight: 2.35
[3] Item: Keyboard        | Weight: 1.17
[4] Item: Notebook        | Weight: 0.15
[5] Item: Backpack        | Weight: 1.80
[-1] Exit
Input the item you would like to insert: 4
Item Notebook has been inserted.
[0] - Cris Militante
[1] - Gabriel Pineda
Select a locker: 0
[0] Item: Prog 1 Book     | Weight: 0.35
[1] Item: Shoes           | Weight: 0.87
[2] Item: Laptop          | Weight: 2.35
[3] Item: Keyboard        | Weight: 1.17
[4] Item: Notebook        | Weight: 0.15
[5] Item: Backpack        | Weight: 1.80
[-1] Exit
Input the item you would like to insert: 3
Item Keyboard has been inserted.
[0] - Cris Militante
[1] - Gabriel Pineda
Select a locker: 0
[0] Item: Prog 1 Book     | Weight: 0.35
[1] Item: Shoes           | Weight: 0.87
[2] Item: Laptop          | Weight: 2.35
[3] Item: Keyboard        | Weight: 1.17
[4] Item: Notebook        | Weight: 0.15
[5] Item: Backpack        | Weight: 1.80
[-1] Exit
Input the item you would like to insert: -1

Locker: [14101941] Cris Militante
[0] Item: Notebook        | Weight: 0.15
[1] Item: Keyboard        | Weight: 1.17
[2] Item: Backpack        | Weight: 1.80
Total Weight: 3.12kg

Locker: [14101943] Gabriel Pineda
Total Weight: 0.00kg
Sample Output 3

[0] - Cris Militante
[1] - Gabriel Pineda
Select a locker: 0
[0] Item: Prog 1 Book     | Weight: 0.35
[1] Item: Shoes           | Weight: 0.87
[2] Item: Laptop          | Weight: 2.35
[3] Item: Keyboard        | Weight: 1.17
[4] Item: Notebook        | Weight: 0.15
[5] Item: Backpack        | Weight: 1.80
[-1] Exit
Input the item you would like to insert: 1
Item Shoes has been inserted.
[0] - Cris Militante
[1] - Gabriel Pineda
Select a locker: 0
[0] Item: Prog 1 Book     | Weight: 0.35
[1] Item: Shoes           | Weight: 0.87
[2] Item: Laptop          | Weight: 2.35
[3] Item: Keyboard        | Weight: 1.17
[4] Item: Notebook        | Weight: 0.15
[5] Item: Backpack        | Weight: 1.80
[-1] Exit
Input the item you would like to insert: 2
Item Laptop has been inserted.
[0] - Cris Militante
[1] - Gabriel Pineda
Select a locker: 0
[0] Item: Prog 1 Book     | Weight: 0.35
[1] Item: Shoes           | Weight: 0.87
[2] Item: Laptop          | Weight: 2.35
[3] Item: Keyboard        | Weight: 1.17
[4] Item: Notebook        | Weight: 0.15
[5] Item: Backpack        | Weight: 1.80
[-1] Exit
Input the item you would like to insert: 3
Item Keyboard has been inserted.
[0] - Cris Militante
[1] - Gabriel Pineda
Select a locker: 0
[0] Item: Prog 1 Book     | Weight: 0.35
[1] Item: Shoes           | Weight: 0.87
[2] Item: Laptop          | Weight: 2.35
[3] Item: Keyboard        | Weight: 1.17
[4] Item: Notebook        | Weight: 0.15
[5] Item: Backpack        | Weight: 1.80
[-1] Exit
Input the item you would like to insert: 0
Item Prog 1 Book has been inserted.
[0] - Cris Militante
[1] - Gabriel Pineda
Select a locker: 0
[0] Item: Prog 1 Book     | Weight: 0.35
[1] Item: Shoes           | Weight: 0.87
[2] Item: Laptop          | Weight: 2.35
[3] Item: Keyboard        | Weight: 1.17
[4] Item: Notebook        | Weight: 0.15
[5] Item: Backpack        | Weight: 1.80
[-1] Exit
Input the item you would like to insert: 4
Item Notebook has been inserted.
[0] - Cris Militante
[1] - Gabriel Pineda
Select a locker: 0
[0] Item: Prog 1 Book     | Weight: 0.35
[1] Item: Shoes           | Weight: 0.87
[2] Item: Laptop          | Weight: 2.35
[3] Item: Keyboard        | Weight: 1.17
[4] Item: Notebook        | Weight: 0.15
[5] Item: Backpack        | Weight: 1.80
[-1] Exit
Input the item you would like to insert: 5
Cannot insert item Backpack as it exceeds the weight limit.
[0] - Cris Militante
[1] - Gabriel Pineda
Select a locker: 0
[0] Item: Prog 1 Book     | Weight: 0.35
[1] Item: Shoes           | Weight: 0.87
[2] Item: Laptop          | Weight: 2.35
[3] Item: Keyboard        | Weight: 1.17
[4] Item: Notebook        | Weight: 0.15
[5] Item: Backpack        | Weight: 1.80
[-1] Exit
Input the item you would like to insert: -1

Locker: [14101941] Cris Militante
[0] Item: Notebook        | Weight: 0.15
[1] Item: Prog 1 Book     | Weight: 0.35
[2] Item: Shoes           | Weight: 0.87
[3] Item: Keyboard        | Weight: 1.17
[4] Item: Laptop          | Weight: 2.35
Total Weight: 4.89kg

Locker: [14101943] Gabriel Pineda
Total Weight: 0.00kg

Initial Code:

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define WEIGHTLIMIT 5

typedef struct{
	char studID[9];
	char studName[65];
	char course[5];
}Student;

typedef struct{
	char itemName[33];
	float weight;		/* Weight of the item to be stored */
}ItemDets;

typedef struct ItemNode{
	ItemDets items[9999];    /*It is assumed that the itemList will not be filled based on the number of items, but the weight.*/
    int numItems;
	float totWeight;		/* Total weight of all items in the locker */
}ItemList;

typedef struct{
	Student owner;			/* Details of the student who owns the locker */
	ItemList IL;			/* ArrayList representation of all the items inside a certain locker */
	int lockerStat; 	 	/* 0 if locker is Vacant, 1 if occupied */
}Locker;

/* Function depositItem(): This function will receive as parameter a Locker, a student ID, and an item to be stored. The function will insert the item into the Locker's ItemList, which is sorted by weight. Heavier items are stored at the end of the locker's ItemList. Make sure that the weight of all items, including the new item to store, does not exceed the weight limit. */

void depositItem(Locker* L, ItemDets newItem)
{

}

void displayItemList(ItemList L, int version) /*version 0 display total weight, 1 displays the Exit option */
{
	int i;
	float totWeight = 0;
	for(i = 0; i < L.numItems; i++){
		printf("[%d] Item: %-15s | Weight: %-15.2f\n", );
	}

	if(version == 0){
	    printf("Total Weight: %.2fkg\n\n",);
	}else if (version == 1){
	    printf("[-1] Exit\n");
	}
}

void displayLockers(Locker L[], int size)
{
    int i;
    printf("\n");
    for(i = 0; i < size; i++){
        printf("Locker: [%s] %s\n", );
        displayItemList();
    }
}

int main(void)
{
    ItemDets item1 = {"Prog 1 Book", 0.35};
	ItemDets item2 = {"Shoes", 0.87};
	ItemDets item3 = {"Laptop", 2.35};
	ItemDets item4 = {"Keyboard", 1.17};
	ItemDets item5 = {"Notebook", 0.15};
	ItemDets item6 = {"Backpack", 1.80};
    ItemList insertable = {{item1, item2, item3, item4, item5, item6}, 6, 6.69};

	Locker locker1 = {{"14101941", "Cris Militante", "BSCS"}, {{}, 0}, 1, 0};
	Locker locker2 = {{"14101943", "Gabriel Pineda", "BSCS"}, {{}, 0}, 1, 0};
    Locker lockers[] = {locker1, locker2};

    int itemInput;
    int lockerInput;
    do{
        printf("[0] - Cris Militante\n");
        printf("[1] - Gabriel Pineda\n");
        printf("Select a locker: ");
        scanf(" %d", &lockerInput);

        if(/* insert code for valid locker input */){
            displayItemList();
            printf("Input the item you would like to insert: ");
            scanf(" %d", &itemInput);
            if(){
                depositItem();
            }
        }else{
            printf("Invalid Locker Inputted!\n");
        }
    }while(/* insert condition for while a user has not inputted the exit command*/);

	displayLockers();

	return 0;
}